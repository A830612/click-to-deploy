apiVersion: app.k8s.io/v1beta1
kind: Application
metadata:
  name: "{{ .Release.Name }}"
  annotations:
    marketplace.cloud.google.com/deploy-info: '{"partner_id": "click-to-deploy-containers", "product_id": "sonarqube", "partner_name": "Google Click to Deploy"}'
  labels:
    app.kubernetes.io/name: "{{ .Release.Name }}"
spec:
  type: SonarQube
  version: '7.6'
  description: |-
    SonarQube is an open source platform to perform automatic reviews with static analysis of code to detect bugs,
    code smells and security vulnerabilities on 25+ programming languages including Java, C#, JavaScript, TypeScript,
    C/C++, COBOL and more. SonarQube is the only product on the market that supports a leak approach as a practice to code quality.

    # Support
    Google does not offer support for this solution. However, community support is available on
    Additional community support is available on [community forums](https://www.sonarqube.org/community/).
  info:
  - name: SonarQube IP address
    type: Reference
    valueFrom:
      serviceRef:
        name: {{ .Release.Name }}-sonarqube-svc
  - name: Temporary password for user postgres
    type: Reference
    valueFrom:
      secretKeyRef:
        key: password
        name: {{ .Release.Name }}-secret
  - name: Application Namespace
    value: {{ .Release.Namespace }}
  maintainers:
  - name: Google Click to Deploy
    url: https://cloud.google.com/solutions/#click-to-deploy
  links:
  - description: 'User Guide: Google Click to Deploy SonarQube'
    url: https://github.com/GoogleCloudPlatform/click-to-deploy/blob/master/k8s/sonarqube/README.md
  - description: 'SonarQube: Getting Started'
    url: https://github.com/GoogleCloudPlatform/sonarqube-docker/blob/master/README.md
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ .Release.Name }}"
  componentKinds:
  - group: apps/v1
    kind: Deployment
  - group: v1
    kind: PersistentVolumeClaim
  - group: v1
    kind: Secret
  - group: v1
    kind: Service
  - group: v1
    kind: ServiceAccount
  notes: |-
    # Access PostgreSQL

    Get the external IP of the PostgreSQL service:

    ```
    SERVICE_IP=$(kubectl get \
      --namespace {{ .Release.Namespace }} \
      svc {{ .Release.Name }}-postgresql-svc \
      -o jsonpath='{.status.loadBalancer.ingress[0].ip}')

    export PGPASSWORD=$(kubectl get secret "{{ .Release.Name }}-secret" \
      --output=jsonpath='{.data.password}' | base64 -d)

    psql -U postgres -h $SERVICE_IP
    ```

    Note that it might take some time for the external IP to be provisioned.

